trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '<Your-Docker-Registry-Service-Connection>'
  imageRepository: 'myapp'
  containerRegistry: 'kldckregistry.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: Build and push image
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '5.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: 'dotnet build --configuration Release'
      displayName: 'Build project'

    - task: Docker@2
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePath)'
        tags: |
          $(tag)

- stage: Deploy
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    steps:
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: '<Your-Kubernetes-Service-Connection>'
        namespace: 'default'
        manifests: '$(Pipeline.Workspace)/manifests/deployment.yaml'
        containers: |
          $(containerRegistry)/$(imageRepository):$(tag)
