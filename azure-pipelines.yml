trigger:
- main

resources:
  containers:
    - container: docker
      image: kldckregistry.azurecr.io/myapp:latest

variables:
  imageName: 'myapp'
  tag: '$(Build.BuildId)'
  imageRepository: 'kldckregistry.azurecr.io'
  containerRegistry: 'my-acr-connection'
  kubernetesServiceConnection: 'my-aks-connection'
  namespace: 'default'

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        command: 'buildAndPush'
        repository: '$(imageRepository)/$(imageName)'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)
        containerRegistry: $(containerRegistry)

- stage: Deploy
  dependsOn: Build
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        manifests: '**/manifests/deployment.yaml'
        imagePullSecrets: 'acr-secret'
        containers: |
          $(imageRepository)/$(imageName):$(tag)
        kubernetesServiceConnection: $(kubernetesServiceConnection)
        namespace: $(namespace)
